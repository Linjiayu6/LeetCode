# -*- coding: utf-8 -*

"""
给定一个整型数组，在数组中找出由三个数组成的最大乘积，并输出这个乘积。
示例 1:
输入: [1,2,3]
输出: 6
示例 2:
输入: [1,2,3,4]
输出: 24

!!! 例如[-4,-3,-2,-1,60] 凉凉
"""
def maximumProduct(nums):
  L = sorted(nums)
  n = len(nums)
  if n < 3:
    return False
  a = L[n - 1] * L[n - 2] * L[n - 3]
  b = L[0] * L[1] * L[n - 1]
  # 判断 最前面和最后面对比, 因为会有负数
  return max(a, b)

print(maximumProduct([722,634,-504,-379,163,-613,-842,-578,750,951,-158,30,-238,-392,-487,-797,-157,-374,999,-5,-521,-879,-858,382,626,803,-347,903,-205,57,-342,186,-736,17,83,726,-960,343,-984,937,-758,-122,577,-595,-544,-559,903,-183,192,825,368,-674,57,-959,884,29,-681,-339,582,969,-95,-455,-275,205,-548,79,258,35,233,203,20,-936,878,-868,-458,-882,867,-664,-892,-687,322,844,-745,447,-909,-586,69,-88,88,445,-553,-666,130,-640,-918,-7,-420,-368,250,-786]))